{"version":3,"sources":["webpack:///../src/components/AnalyticsDashboard.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","AnalyticsDashboard","__position","__code","__scope","Playground","Props","clientId","SessionsByDateChart","SessionsGeoChart","SessionsByHourChart","SessionsBySourceChart","PageViewsPerPathChart","authOptions","renderCharts","gapi","viewId","chartStyles","margin","maxWidth","style","display","flexWrap","showPageViews","showUsers","options","width","isMDXComponent"],"mappings":"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","file":"component---src-components-analytics-dashboard-mdx-bd31d9e98e9e2d454fe2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-analytics-charts/react-analytics-charts/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport clientId from '../__docz__/client-id-config';\nimport { AnalyticsDashboard } from './AnalyticsDashboard';\nimport { SessionsByDateChart } from './charts/common/SessionsByDateChart';\nimport { SessionsGeoChart } from './charts/common/SessionsGeoChart';\nimport { SessionsByHourChart } from './charts/common/SessionsByHourChart';\nimport { SessionsBySourceChart } from './charts/common/SessionsBySourceChart';\nimport { PageViewsPerPathChart } from './charts/common/PageViewsPerPathChart';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>AnalyticsDashboard</h1>\n    <p>{`See the `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"#example\"\n        }}>{`live demo example`}</a></strong>{` below.`}</p>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`This component allows you to drop in an analytics dashboard that automatically handles loading the `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AuthorizeButton\"\n      }}>{`sign in`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/SignOutButton\"\n      }}>{`sign out`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector\"\n      }}>{`view selection`}</a>{`.`}</p>\n    <p>{`All you need to do is provide your `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/google-oauth-client-id\"\n      }}>{`Client ID`}</a>{` and a render prop that renders all the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts\"\n      }}>{`charts`}</a>{` you'd like to see.`}</p>\n    <p>{`Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts\"\n      }}>{`Charts Overview`}</a>{` for a list of all charts available.`}</p>\n    <p>{`If you need more flexibility, you can create your own `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/custom-dashboards-standalone-charts\"\n      }}>{`custom dashboard`}</a>{` if you'd like.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`AnalyticsDashboard takes a `}<inlineCode parentName=\"p\">{`clientId`}</inlineCode>{` and a `}<inlineCode parentName=\"p\">{`renderCharts`}</inlineCode>{` render prop.`}</p>\n    <p>{`Just use the `}<inlineCode parentName=\"p\">{`renderCharts`}</inlineCode>{` prop to render the charts you'd like to view and the dashboard will handle everything else, including loading the `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{`, handling auth, and showing a view selector.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { AnalyticsDashboard } from 'react-analytics-charts';\n// Over ten different commonly used charts are available\nimport { SessionsByDateChart, SessionsGeoChart } from 'react-analytics-charts';\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<AnalyticsDashboard\n  authOptions={{ clientId: \"123456789012-abc123def456ghi789jkl012mno345p.apps.googleusercontent.com\" }}\n  renderCharts={(gapi, viewId) => {\n    return (\n      <div>\n        <SessionsByDateChart\n          gapi={gapi}\n          viewId={viewId}\n          showPageViews\n          showUsers\n        />\n        <SessionsGeoChart \n          gapi={gapi} \n          viewId={viewId} \n          showPageViews \n        />\n        ... More charts here ...\n      </div>\n    );\n  }}\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={AnalyticsDashboard} mdxType=\"Props\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: Expand each prop for more information.`}</p>\n    </blockquote>\n    <br /><br />\n    <p>{`If you have more than one dashboard on the page, be sure to specify a unique `}<inlineCode parentName=\"p\">{`dashId`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The analytics dashboard is rendered as a `}<inlineCode parentName=\"li\">{`div`}</inlineCode>{` with the class name `}<inlineCode parentName=\"li\">{`analytics-dashboard`}</inlineCode>{`. `}</li>\n      <li parentName=\"ul\">{`The authorize and sign-out buttons are in a `}<inlineCode parentName=\"li\">{`div`}</inlineCode>{` with the class name `}<inlineCode parentName=\"li\">{`analytics-auth-widgets`}</inlineCode>{`.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.analytics-dashboard {\n  /* Custom styles */\n}\n\n.analytics-auth-widgets {\n  /* Custom styles */\n}\n`}</code></pre>\n    <p>{`See the styling docs for `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AuthorizeButton#styling\"\n      }}>{`AuthorizeButton`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/DataChart#styling\"\n      }}>{`DataChart`}</a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/SignOutButton#styling\"\n      }}>{`SignOutButton`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector#styling\"\n      }}>{`ViewSelector`}</a>{` to style the different components\nused in the analytics dashboard. `}</p>\n    <p>{`Charts can be styled individually as you see fit (give them a `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{`, wrap in a styled component, etc).`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following example renders a few common charts for the past 28 days, and adds some basic layout styles to them.`}</p>\n    <p>{`Click the \"Access Google Analytics\" button to get started.`}</p>\n    <Playground __position={3} __code={'<AnalyticsDashboard\\n  authOptions={{ clientId }}\\n  renderCharts={(gapi, viewId) => {\\n    const chartStyles = {\\n      margin: \\'15px\\',\\n      maxWidth: 400,\\n    }\\n    return (\\n      <div style={{ display: \\'flex\\', flexWrap: \\'wrap\\' }}>\\n        <SessionsByDateChart\\n          gapi={gapi}\\n          viewId={viewId}\\n          style={chartStyles}\\n          showPageViews\\n          showUsers\\n        />\\n        <SessionsGeoChart\\n          gapi={gapi}\\n          viewId={viewId}\\n          style={chartStyles}\\n          showPageViews\\n          options={{ width: 400 }}\\n        />\\n        <SessionsBySourceChart\\n          gapi={gapi}\\n          viewId={viewId}\\n          style={chartStyles}\\n        />\\n        <SessionsByHourChart\\n          gapi={gapi}\\n          viewId={viewId}\\n          style={chartStyles}\\n        />\\n        <PageViewsPerPathChart\\n          gapi={gapi}\\n          viewId={viewId}\\n          style={{ margin: \\'15px\\' }}\\n        />\\n      </div>\\n    )\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      clientId,\n      AnalyticsDashboard,\n      SessionsByDateChart,\n      SessionsGeoChart,\n      SessionsByHourChart,\n      SessionsBySourceChart,\n      PageViewsPerPathChart,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <AnalyticsDashboard authOptions={{\n        clientId\n      }} renderCharts={(gapi, viewId) => {\n        const chartStyles = {\n          margin: '15px',\n          maxWidth: 400\n        };\n        return <div style={{\n          display: 'flex',\n          flexWrap: 'wrap'\n        }}>\n            <SessionsByDateChart gapi={gapi} viewId={viewId} style={chartStyles} showPageViews showUsers mdxType=\"SessionsByDateChart\" />\n            <SessionsGeoChart gapi={gapi} viewId={viewId} style={chartStyles} showPageViews options={{\n            width: 400\n          }} mdxType=\"SessionsGeoChart\" />\n            <SessionsBySourceChart gapi={gapi} viewId={viewId} style={chartStyles} mdxType=\"SessionsBySourceChart\" />\n            <SessionsByHourChart gapi={gapi} viewId={viewId} style={chartStyles} mdxType=\"SessionsByHourChart\" />\n            <PageViewsPerPathChart gapi={gapi} viewId={viewId} style={{\n            margin: '15px'\n          }} mdxType=\"PageViewsPerPathChart\" />\n          </div>;\n      }} mdxType=\"AnalyticsDashboard\" />\n    </Playground>\n    <small>Note: You can edit the source above. Your changes will be rendered immediately.</small>\n    <br /><br />\n    <p>{`Many more `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts#common-charts\"\n      }}>{`ready-made charts`}</a>{` are available, and you can `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts#custom-charts\"\n      }}>{`create your own charts`}</a>{` if you'd like.`}</p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts\"\n      }}>{`Charts Overview`}</a>{` for more information.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}