(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{zh4S:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return l})),t.d(a,"default",(function(){return p}));var n=t("Fcif"),r=t("+I+c"),s=(t("mXGw"),t("/FXl")),i=t("TjRS"),c=t("ZFoC"),o=t("bAZo"),l=(t("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/AnalyticsDashboard.mdx"}});var b={_frontmatter:l},h=i.a;function p(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(s.b)(h,Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("h1",null,"AnalyticsDashboard"),Object(s.b)("p",null,"See the ",Object(s.b)("strong",{parentName:"p"},Object(s.b)("a",{parentName:"strong",href:"#example"},"full example"))," below."),Object(s.b)("h2",{id:"description"},"Description"),Object(s.b)("p",null,"This component allows you to drop in an analytics dashboard that automatically handles loading the ",Object(s.b)("a",{parentName:"p",href:"https://justinmahar.github.io/react-use-analytics-api/"},"Google Analytics Embed API"),", ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/AuthorizeButton"},"sign in")," and ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/SignOutButton"},"sign out"),", and ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/ViewSelector"},"view selection"),"."),Object(s.b)("p",null,"All you need to do is provide your ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/google-oauth-client-id"},"Client ID")," and a render prop that renders all the ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/charts"},"charts")," you'd like to see."),Object(s.b)("p",null,"Refer to the ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/charts"},"Charts Overview")," for a list of all charts available."),Object(s.b)("p",null,"If you need more flexibility, you can create your own ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/custom-dashboards-standalone-charts"},"custom dashboard")," if you'd like."),Object(s.b)("h2",{id:"usage"},"Usage"),Object(s.b)("p",null,"AnalyticsDashboard takes a ",Object(s.b)("inlineCode",{parentName:"p"},"clientId")," and a ",Object(s.b)("inlineCode",{parentName:"p"},"renderCharts")," render prop."),Object(s.b)("p",null,"Just use the ",Object(s.b)("inlineCode",{parentName:"p"},"renderCharts")," prop to render the charts you'd like to view and the dashboard will handle everything else, including loading the ",Object(s.b)("a",{parentName:"p",href:"https://justinmahar.github.io/react-use-analytics-api/"},"Google Analytics Embed API"),", handling auth, and showing a view selector."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-jsx"},'import { AnalyticsDashboard } from "react-analytics-charts";\n// Over ten different commonly used charts are available\nimport { SessionsByDateChart, SessionsGeoChart } from "react-analytics-charts";\n')),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-jsx"},'<AnalyticsDashboard\n  authOptions={{\n    clientId:\n      "123456789012-abc123def456ghi789jkl012mno345p.apps.googleusercontent.com",\n  }}\n  renderCharts={(gapi, viewId) => {\n    return (\n      <div>\n        <SessionsByDateChart\n          gapi={gapi}\n          viewId={viewId}\n          showPageViews\n          showUsers\n        />\n        <SessionsGeoChart gapi={gapi} viewId={viewId} showPageViews />\n        ... More charts here ...\n      </div>\n    );\n  }}\n/>\n')),Object(s.b)("h2",{id:"props"},"Props"),Object(s.b)(c.c,{of:o.a,mdxType:"Props"}),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"Note: Expand each prop for more information.")),Object(s.b)("br",null),Object(s.b)("br",null),Object(s.b)("p",null,"If you have more than one dashboard on the page, be sure to specify a unique ",Object(s.b)("inlineCode",{parentName:"p"},"dashId"),"."),Object(s.b)("h2",{id:"styling"},"Styling"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"The analytics dashboard is rendered as a ",Object(s.b)("inlineCode",{parentName:"li"},"div")," with the class name ",Object(s.b)("inlineCode",{parentName:"li"},"analytics-dashboard"),"."),Object(s.b)("li",{parentName:"ul"},"The authorize and sign-out buttons are in a ",Object(s.b)("inlineCode",{parentName:"li"},"div")," with the class name ",Object(s.b)("inlineCode",{parentName:"li"},"analytics-auth-widgets"),".")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-css"},".analytics-dashboard {\n  /* Custom styles */\n}\n\n.analytics-auth-widgets {\n  /* Custom styles */\n}\n")),Object(s.b)("p",null,"See the styling docs for ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/AuthorizeButton#styling"},"AuthorizeButton"),", ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/DataChart#styling"},"DataChart"),",\n",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/SignOutButton#styling"},"SignOutButton"),", and ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/ViewSelector#styling"},"ViewSelector")," to style the different components\nused in the analytics dashboard."),Object(s.b)("p",null,"Charts can be styled individually as you see fit (give them a ",Object(s.b)("inlineCode",{parentName:"p"},"className"),", ",Object(s.b)("inlineCode",{parentName:"p"},"style"),", wrap in a styled component, etc)."),Object(s.b)("h2",{id:"example"},"Example"),Object(s.b)("p",null,"The following example renders a few common charts for the past 28 days, and adds some basic layout styles to them."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-jsx"},'<AnalyticsDashboard\n  authOptions={{ clientId }}\n  renderCharts={(gapi, viewId) => {\n    const chartStyles = {\n      margin: "15px",\n      maxWidth: 400,\n    };\n    return (\n      <div style={{ display: "flex", flexWrap: "wrap" }}>\n        <SessionsByDateChart\n          gapi={gapi}\n          viewId={viewId}\n          style={chartStyles}\n          showPageViews\n          showUsers\n        />\n        <SessionsGeoChart\n          gapi={gapi}\n          viewId={viewId}\n          style={chartStyles}\n          showPageViews\n          options={{ width: 400 }}\n        />\n        <SessionsBySourceChart\n          gapi={gapi}\n          viewId={viewId}\n          style={chartStyles}\n        />\n        <SessionsByHourChart gapi={gapi} viewId={viewId} style={chartStyles} />\n        <PageViewsPerPathChart\n          gapi={gapi}\n          viewId={viewId}\n          style={{ margin: "15px" }}\n        />\n      </div>\n    );\n  }}\n/>\n')),Object(s.b)("p",null,"Many more ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/charts#common-charts"},"ready-made charts")," are available, and you can ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/charts#custom-charts"},"create your own charts")," if you'd like."),Object(s.b)("p",null,"See the ",Object(s.b)("a",{parentName:"p",href:"/react-analytics-charts/charts"},"Charts Overview")," for more information."))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/AnalyticsDashboard.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-analytics-dashboard-mdx-e17289423135910a3fad.js.map