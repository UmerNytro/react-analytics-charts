(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"89bL":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return u})),n.d(t,"default",(function(){return m}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt");var a=n("/FXl"),i=n("TjRS"),o=n("ZFoC"),r=n("AdhA"),l=n("5Jen"),c=n("fAuu"),s=n("s4+M"),b=n("EWTb");n("aD51");function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var u={};void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/AuthorizeButton.mdx"}});var h={_frontmatter:u},d=i.a;function m(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,["components"]);return Object(a.b)(d,p({},h,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)(r.a,{trackingId:l.a,mdxType:"GoogleAnalytics"}),Object(a.b)("h1",null,"AuthorizeButton"),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"Renders a Google Analytics sign-in button allowing the user to sign in with their Google account."),Object(a.b)("p",null,"This component is rendered by the ",Object(a.b)("a",p({parentName:"p"},{href:"https://devboldly.github.io/react-use-analytics-api/"}),"Google Analytics Embed API")," into a container on the page."),Object(a.b)("p",null,"After signing in, the ",Object(a.b)("inlineCode",{parentName:"p"},"onSignIn")," handler is called. This handler can be used to update the view once signed in. The handler is not called if already signed in. "),Object(a.b)("p",null,"To check if the user is already authorized, you can use the ",Object(a.b)("a",p({parentName:"p"},{href:"https://devboldly.github.io/react-use-analytics-api/useAnalyticsApi"}),Object(a.b)("inlineCode",{parentName:"a"},"useAnalyticsApi"))," hook. A full example is available below."),Object(a.b)("p",null,"The ",Object(a.b)("a",p({parentName:"p"},{href:"https://devboldly.github.io/react-use-analytics-api/"}),"Google Analytics Embed API")," will only render the sign-in button once per page load. A refresh button will be shown when the original button's container is disposed of by React. Clicking that button reloads the current page."),Object(a.b)("p",null,"This component wraps the ",Object(a.b)("a",p({parentName:"p"},{href:"https://devboldly.github.io/react-use-analytics-api/useAuthorize"}),Object(a.b)("inlineCode",{parentName:"a"},"useAuthorize"))," hook from ",Object(a.b)("a",p({parentName:"p"},{href:"https://devboldly.github.io/react-use-analytics-api/"}),"react-use-analytics-api"),"."),Object(a.b)("p",null,"See related ",Object(a.b)("a",p({parentName:"p"},{href:"/react-analytics-charts/SignOutButton"}),"SignOutButton"),"."),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",p({parentName:"pre"},{className:"language-jsx"}),"<AuthorizeButton\n  gapi={gapi}\n  authOptions={{\n    clientId: '123456789012-abc123def456ghi789jkl012mno345p.apps.googleusercontent.com',\n  }}\n  onSignIn={signInHandler}\n/>\n")),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)(o.d,{of:b.a,mdxType:"Props"}),Object(a.b)("small",null,"Note: Expand each prop for more information."),Object(a.b)("h2",{id:"styling"},"Styling"),Object(a.b)("p",null,"This component renders as either one or two divs, depending on if a refresh page button is visible."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"The authorize button is in a ",Object(a.b)("inlineCode",{parentName:"p"},"div")," with the class name ",Object(a.b)("inlineCode",{parentName:"p"},"gapi-authorize-container"),". Inspect the DOM to see what Google renders there."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",p({parentName:"pre"},{className:"language-css"}),".gapi-authorize-container {\n  /* Custom styles */\n}\n"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"The refresh ",Object(a.b)("inlineCode",{parentName:"p"},"button")," is in a ",Object(a.b)("inlineCode",{parentName:"p"},"div")," with the class name ",Object(a.b)("inlineCode",{parentName:"p"},"analytics-refresh-button-container"),". This contains the ",Object(a.b)("inlineCode",{parentName:"p"},"button")," element for refreshing the page."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",p({parentName:"pre"},{className:"language-css"}),".analytics-refresh-button-container button {\n  /* Custom styles */\n}\n")))),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("p",null,"Below is a live example showing the full authorization flow from signed out to signed in, and vice versa. "),Object(a.b)("p",null,"Although not necessary if using an ",Object(a.b)("a",p({parentName:"p"},{href:"/react-analytics-charts/AnalyticsDashboard"}),"AnalyticsDashboard"),", if you want, you can use the ",Object(a.b)("a",p({parentName:"p"},{href:"https://devboldly.github.io/react-use-analytics-api/useAnalyticsApi"}),Object(a.b)("inlineCode",{parentName:"a"},"useAnalyticsApi"))," hook to check if the user is authorized."),Object(a.b)("div",{style:{border:"solid 2px #67788a",padding:"20px"}},Object(a.b)(s.a,{mdxType:"AuthExample"})),Object(a.b)("pre",null,Object(a.b)("code",p({parentName:"pre"},{className:"language-jsx"}),"import * as React from 'react';\nimport { useAnalyticsApi } from 'react-use-analytics-api';\nimport { AuthorizeButton, SignOutButton } from 'react-analytics-charts';\n\nexport function AuthExample() {\n  const { gapi, authorized } = useAnalyticsApi();\n  return (\n    <div>\n      {!authorized && (\n        <div>\n          Not authorized. Sign in here:{' '}\n          <AuthorizeButton\n            gapi={gapi}\n            authOptions={{ clientId: '123456789012-abc123def456ghi789jkl012mno345p.apps.googleusercontent.com' }}\n          />\n        </div>\n      )}\n      {authorized && (\n        <div>\n          We're authorized! <SignOutButton gapi={gapi} />\n        </div>\n      )}\n    </div>\n  );\n}\n")),Object(a.b)(c.a,{author:"DevBoldly",url:"https://devboldly.com/",emoji:"üç∫",emojiLabel:"Beer",mdxType:"CreatedBy"}))}m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/AuthorizeButton.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-authorize-button-mdx-125ad8807fc615be17be.js.map