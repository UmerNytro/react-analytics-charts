{"version":3,"sources":["webpack:///../src/components/AuthorizeButton.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","AuthorizeButton","style","border","padding","isMDXComponent"],"mappings":"8gBASO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,yCACA,iBAAQ,CACN,GAAM,eADR,eAGA,0HACA,0DAAyC,mBAAGC,WAAW,KAAQ,CAC3D,KAAQ,yDAD6B,8BAAzC,kCAGA,8CAA6B,0BAAYA,WAAW,KAAvB,YAA7B,oIACA,oFAAmE,mBAAGA,WAAW,KAAQ,CACrF,KAAQ,wEACP,0BAAYA,WAAW,KAAvB,oBAFL,6CAGA,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,yDADD,8BAAX,wMAGA,iDAAgC,mBAAGA,WAAW,KAAQ,CAClD,KAAQ,qEACP,0BAAYA,WAAW,KAAvB,iBAFL,cAEgF,mBAAGA,WAAW,KAAQ,CAClG,KAAQ,yDADoE,2BAFhF,KAKA,oCAAmB,mBAAGA,WAAW,KAAQ,CACrC,KAAQ,0CADO,iBAAnB,KAGA,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,gEAIL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wLAUL,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAiBH,QAAQ,UACpC,8BACE,iBAAGC,WAAW,cAAd,iDAEF,iBAAQ,CACN,GAAM,WADR,WAGA,4HACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gCAAoD,0BAAYA,WAAW,KAAvB,OAApD,wBAA4H,0BAAYA,WAAW,KAAvB,4BAA5H,uDACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,6DAOvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,eAAmC,0BAAYA,WAAW,KAAvB,UAAnC,YAAkG,0BAAYA,WAAW,KAAvB,OAAlG,wBAA0K,0BAAYA,WAAW,KAAvB,sCAA1K,uBAAgR,0BAAYA,WAAW,KAAvB,UAAhR,qCACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,+EAQzB,iBAAQ,CACN,GAAM,WADR,WAGA,mIACA,2DAA0C,mBAAGA,WAAW,KAAQ,CAC5D,KAAQ,+CAD8B,sBAA1C,kCAEkE,mBAAGA,WAAW,KAAQ,CACpF,KAAQ,wEACP,0BAAYA,WAAW,KAAvB,oBAJL,6CAKA,mBAAKG,MAAO,CACVC,OAAQ,oBACRC,QAAS,SAEb,YAAC,IAAD,CAAaN,QAAQ,iBAEnB,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,itB,2MAgCTJ,EAAWU,gBAAiB","file":"component---src-components-authorize-button-mdx-1fadc7c94df6c55b1c85.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-analytics-charts/react-analytics-charts/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { AuthExample } from '../__docz__/components/AuthExample';\nimport { AuthorizeButton } from './AuthorizeButton';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>AuthorizeButton</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`Renders a Google Analytics sign-in button allowing the user to sign in with their Google account.`}</p>\n    <p>{`This component is rendered by the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{` into a container on the page.`}</p>\n    <p>{`After signing in, the `}<inlineCode parentName=\"p\">{`onSignIn`}</inlineCode>{` handler is called. This handler can be used to update the view once signed in. The handler is not called if already signed in. `}</p>\n    <p>{`To check if the user is already authorized, you can use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/useAnalyticsApi\"\n      }}><inlineCode parentName=\"a\">{`useAnalyticsApi`}</inlineCode></a>{` hook. A full example is available below.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{` will only render the sign-in button once per page load. A refresh button will be shown when the original button's container is disposed of by React. Clicking that button reloads the current page.`}</p>\n    <p>{`This component wraps the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/useAuthorize\"\n      }}><inlineCode parentName=\"a\">{`useAuthorize`}</inlineCode></a>{` hook from `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`react-use-analytics-api`}</a>{`.`}</p>\n    <p>{`See related `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/SignOutButton\"\n      }}>{`SignOutButton`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { AuthorizeButton } from 'react-analytics-charts';\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<AuthorizeButton\n  gapi={gapi}\n  authOptions={{\n    clientId: '123456789012-abc123def456ghi789jkl012mno345p.apps.googleusercontent.com',\n  }}\n  onSignIn={signInHandler}\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={AuthorizeButton} mdxType=\"Props\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: Expand each prop for more information.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h2>\n    <p>{`This component renders as either one or two divs, depending on if a refresh page button is visible.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The authorize button is in a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` with the class name `}<inlineCode parentName=\"p\">{`gapi-authorize-container`}</inlineCode>{`. Inspect the DOM to see what Google renders there.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-css\"\n          }}>{`.gapi-authorize-container {\n  /* Custom styles */\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The refresh `}<inlineCode parentName=\"p\">{`button`}</inlineCode>{` is in a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` with the class name `}<inlineCode parentName=\"p\">{`analytics-refresh-button-container`}</inlineCode>{`. This contains the `}<inlineCode parentName=\"p\">{`button`}</inlineCode>{` element for refreshing the page.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-css\"\n          }}>{`.analytics-refresh-button-container button {\n  /* Custom styles */\n}\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Below is a live example showing the full authorization flow from signed out to signed in, and vice versa. `}</p>\n    <p>{`Although not necessary if using an `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n      }}>{`AnalyticsDashboard`}</a>{`, if you want, you can use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/useAnalyticsApi\"\n      }}><inlineCode parentName=\"a\">{`useAnalyticsApi`}</inlineCode></a>{` hook to check if the user is authorized.`}</p>\n    <div style={{\n      border: 'solid 2px #67788a',\n      padding: '20px'\n    }}>\n  <AuthExample mdxType=\"AuthExample\" />\n    </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import * as React from 'react';\nimport { useAnalyticsApi } from 'react-use-analytics-api';\nimport { AuthorizeButton, SignOutButton } from 'react-analytics-charts';\n\nexport function AuthExample() {\n  const { gapi, authorized } = useAnalyticsApi();\n  return (\n    <div>\n      {!authorized && (\n        <div>\n          Not authorized. Sign in here:{' '}\n          <AuthorizeButton\n            gapi={gapi}\n            authOptions={{ clientId: '123456789012-abc123def456ghi789jkl012mno345p.apps.googleusercontent.com' }}\n          />\n        </div>\n      )}\n      {authorized && (\n        <div>\n          We're authorized! <SignOutButton gapi={gapi} />\n        </div>\n      )}\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}