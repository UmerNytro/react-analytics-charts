{"version":3,"sources":["webpack:///../src/components/charts/PieChart.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","clientId","AnalyticsDashboard","PieChart","authOptions","renderCharts","gapi","viewId","query","ids","metrics","dimensions","container","options","title","dashId","donut","is3D","isMDXComponent"],"mappings":"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","file":"component---src-components-charts-pie-chart-mdx-d369feca3f84739301de.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-analytics-charts/react-analytics-charts/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport clientId from \"../../__docz__/client-id-config\";\nimport { AnalyticsDashboard } from \"../AnalyticsDashboard\";\nimport { PieChart } from \"./PieChart\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>PieChart</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`A pie chart shows data as slices of pie. You can also display a pie chart as a donut.`}</p>\n    <p>{`You can use this to create a custom chart by providing your own data query (see `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/DataChart\"\n      }}>{`DataChart`}</a>{` for more info on queries) and,\noptionally, `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/piechart#configuration-options\"\n      }}>{`pie chart options`}</a>{` for the chart.`}</p>\n    <p>{`Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts\"\n      }}>{`Charts Overview`}</a>{` for a list of all charts available.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { AnalyticsDashboard, PieChart } from \"react-analytics-charts\";\n`}</code></pre>\n    <Playground __position={1} __code={'<AnalyticsDashboard\\n  authOptions={{ clientId }}\\n  renderCharts={(gapi, viewId) => {\\n    return (\\n      <PieChart\\n        gapi={gapi}\\n        query={{\\n          ids: viewId,\\n          \\'start-date\\': \\'30daysAgo\\',\\n          \\'end-date\\': \\'today\\',\\n          metrics: \\'ga:sessions,ga:users,ga:pageviews\\',\\n          dimensions: \\'ga:deviceCategory\\',\\n        }}\\n        container=\\\"traffic-by-device-category-chart\\\"\\n        options={{\\n          title: \\'Traffic By Device Category (30 Days)\\',\\n        }}\\n      />\\n    )\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      clientId,\n      AnalyticsDashboard,\n      PieChart,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <AnalyticsDashboard authOptions={{\n        clientId\n      }} renderCharts={(gapi, viewId) => {\n        return <PieChart gapi={gapi} query={{\n          ids: viewId,\n          \"start-date\": \"30daysAgo\",\n          \"end-date\": \"today\",\n          metrics: \"ga:sessions,ga:users,ga:pageviews\",\n          dimensions: \"ga:deviceCategory\"\n        }} container=\"traffic-by-device-category-chart\" options={{\n          title: \"Traffic By Device Category (30 Days)\"\n        }} mdxType=\"PieChart\" />;\n      }} mdxType=\"AnalyticsDashboard\" />\n    </Playground>\n    <br />\n    <small>\n  Note: You can edit the source above. Your changes will be rendered\n  immediately.\n    </small>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`gapi`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GoogleAnalyticsEmbedAPI`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Required.`}</strong>{` The ready and authorized `}<a parentName=\"td\" {...{\n              \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n            }}>{`Google Analytics Embed API`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`container`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Required.`}</strong>{` Provide an ID for the `}<inlineCode parentName=\"td\">{`div`}</inlineCode>{` that will contain the chart.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`query`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/react-analytics-charts/DataChart#query-prop\"\n            }}><inlineCode parentName=\"a\">{`Query`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Required.`}</strong>{` The `}<a parentName=\"td\" {...{\n              \"href\": \"/react-analytics-charts/DataChart#query-prop\"\n            }}><inlineCode parentName=\"a\">{`Query`}</inlineCode></a>{` for the Analytics data. See the Query Prop section of `}<a parentName=\"td\" {...{\n              \"href\": \"/react-analytics-charts/DataChart\"\n            }}>{`DataChart`}</a>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`donut`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Optional.`}</strong>{` When `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, the pie chart will become a donut chart, using an aesthetically pleasing golden ratio `}<inlineCode parentName=\"td\">{`pieHole`}</inlineCode>{` of `}<inlineCode parentName=\"td\">{`0.382`}</inlineCode>{`. Default `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/piechart#configuration-options\"\n            }}><inlineCode parentName=\"a\">{`PieChartOptions`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional. Options for the chart. To determine what to use here, refer to the Configuration Options section for `}<a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/piechart#configuration-options\"\n            }}>{`pie charts`}</a>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`This component also supports `}<strong parentName=\"p\">{`all `}<inlineCode parentName=\"strong\">{`div`}</inlineCode>{` props`}</strong>{`, such as `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{`.`}</p>\n    <p>{`If you have more than one of this chart on the page, be sure to specify a unique `}<inlineCode parentName=\"p\">{`container`}</inlineCode>{` ID.`}</p>\n    <h3 {...{\n      \"id\": \"query\"\n    }}>{`Query`}</h3>\n    <p>{`Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/DataChart#query-prop\"\n      }}>{`DataChart Query Prop`}</a>{` to build your own data `}<inlineCode parentName=\"p\">{`query`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"chart-options\"\n    }}>{`Chart Options`}</h3>\n    <p>{`There are numerous `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/piechart#configuration-options\"\n      }}>{`chart options`}</a>{` available for\npie charts, allowing you to customize the appearance. Provide these via the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` prop.`}</p>\n    <p>{`Below are a few of the notable ones:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Option`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Text to display above the chart.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of the chart, in pixels. Also supports a percentage string. Default: `}<inlineCode parentName=\"td\">{`100%`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Height of the chart, in pixels.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`is3D`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`, displays a three-dimensional chart. Default: `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`pieHole`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If between `}<inlineCode parentName=\"td\">{`0`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`1`}</inlineCode>{`, displays a donut chart. The hole with have a radius equal to number times the radius of the chart. Default: `}<inlineCode parentName=\"td\">{`0`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`pieSliceText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The content of the text displayed on the slice.`}<br />{`Can be one of the following:`}<ul><li><inlineCode parentName=\"td\">{`'percentage'`}</inlineCode>{` - The percentage of the slice size out of the total.`}</li><li><inlineCode parentName=\"td\">{`'value'`}</inlineCode>{` - The quantitative value of the slice.`}</li><li><inlineCode parentName=\"td\">{`'label'`}</inlineCode>{` - The name of the slice.`}</li><li><inlineCode parentName=\"td\">{`'none'`}</inlineCode>{` - No text is displayed.`}</li></ul>{`Default: `}<inlineCode parentName=\"td\">{`'percentage'`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The containing element is rendered as a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` and you can size and style it as you see fit using CSS.`}</p>\n    <p>{`See all `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/piechart#configuration-options\"\n      }}>{`chart options`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"donut-chart-example\"\n    }}>{`Donut Chart Example`}</h2>\n    <Playground __position={4} __code={'<AnalyticsDashboard\\n  authOptions={{ clientId }}\\n  dashId=\\\"donut\\\"\\n  renderCharts={(gapi, viewId) => {\\n    return (\\n      <PieChart\\n        gapi={gapi}\\n        query={{\\n          ids: viewId,\\n          \\'start-date\\': \\'30daysAgo\\',\\n          \\'end-date\\': \\'today\\',\\n          metrics: \\'ga:sessions\\',\\n          dimensions: \\'ga:source\\',\\n        }}\\n        container=\\\"donut-traffic-by-device-category-chart\\\"\\n        donut\\n        options={{\\n          title: \\'Traffic By Source (30 Days)\\',\\n        }}\\n      />\\n    )\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      clientId,\n      AnalyticsDashboard,\n      PieChart,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <AnalyticsDashboard authOptions={{\n        clientId\n      }} dashId=\"donut\" renderCharts={(gapi, viewId) => {\n        return <PieChart gapi={gapi} query={{\n          ids: viewId,\n          \"start-date\": \"30daysAgo\",\n          \"end-date\": \"today\",\n          metrics: \"ga:sessions\",\n          dimensions: \"ga:source\"\n        }} container=\"donut-traffic-by-device-category-chart\" donut options={{\n          title: \"Traffic By Source (30 Days)\"\n        }} mdxType=\"PieChart\" />;\n      }} mdxType=\"AnalyticsDashboard\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"3d-chart-example\"\n    }}>{`3D Chart Example`}</h2>\n    <Playground __position={5} __code={'<AnalyticsDashboard\\n  authOptions={{ clientId }}\\n  dashId=\\\"3d-pie\\\"\\n  renderCharts={(gapi, viewId) => {\\n    return (\\n      <PieChart\\n        gapi={gapi}\\n        query={{\\n          ids: viewId,\\n          \\'start-date\\': \\'30daysAgo\\',\\n          \\'end-date\\': \\'today\\',\\n          metrics: \\'ga:pageviews\\',\\n          dimensions: \\'ga:pagePath\\',\\n        }}\\n        container=\\\"3d-pie-pageviews-per-path-chart\\\"\\n        options={{\\n          title: \\'Pageviews Per Path (30 Days)\\',\\n          is3D: true,\\n        }}\\n      />\\n    )\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      clientId,\n      AnalyticsDashboard,\n      PieChart,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <AnalyticsDashboard authOptions={{\n        clientId\n      }} dashId=\"3d-pie\" renderCharts={(gapi, viewId) => {\n        return <PieChart gapi={gapi} query={{\n          ids: viewId,\n          \"start-date\": \"30daysAgo\",\n          \"end-date\": \"today\",\n          metrics: \"ga:pageviews\",\n          dimensions: \"ga:pagePath\"\n        }} container=\"3d-pie-pageviews-per-path-chart\" options={{\n          title: \"Pageviews Per Path (30 Days)\",\n          is3D: true\n        }} mdxType=\"PieChart\" />;\n      }} mdxType=\"AnalyticsDashboard\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}