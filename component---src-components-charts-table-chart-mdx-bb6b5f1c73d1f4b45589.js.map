{"version":3,"sources":["webpack:///../src/components/charts/TableChart.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","clientId","AnalyticsDashboard","TableChart","authOptions","renderCharts","gapi","viewId","query","ids","metrics","dimensions","container","options","sortAscending","sortColumn","isMDXComponent"],"mappings":"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","file":"component---src-components-charts-table-chart-mdx-bb6b5f1c73d1f4b45589.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-analytics-charts/react-analytics-charts/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport clientId from \"../../__docz__/client-id-config\";\nimport { AnalyticsDashboard } from \"../AnalyticsDashboard\";\nimport { TableChart } from \"./TableChart\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>TableChart</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`A table shows sortable rows of analytics data under labeled columns.`}</p>\n    <p>{`You can use this to create a custom table by providing your own data query (see `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/DataChart\"\n      }}>{`DataChart`}</a>{` for more info on queries) and,\noptionally, `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/table#configuration-options\"\n      }}>{`table options`}</a>{` for the table.`}</p>\n    <p>{`Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts\"\n      }}>{`Charts Overview`}</a>{` for a list of all charts available.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { AnalyticsDashboard, TableChart } from \"react-analytics-charts\";\n`}</code></pre>\n    <Playground __position={1} __code={'<AnalyticsDashboard\\n  authOptions={{ clientId }}\\n  renderCharts={(gapi, viewId) => {\\n    return (\\n      <TableChart\\n        gapi={gapi}\\n        query={{\\n          ids: viewId,\\n          \\'start-date\\': \\'28daysAgo\\',\\n          \\'end-date\\': \\'today\\',\\n          metrics: \\'ga:pageviews\\',\\n          dimensions: \\'ga:pagePath\\',\\n        }}\\n        container=\\\"pageviews-per-path-chart\\\"\\n        options={{\\n          sortAscending: false,\\n          sortColumn: 1,\\n        }}\\n      />\\n    )\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      clientId,\n      AnalyticsDashboard,\n      TableChart,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <AnalyticsDashboard authOptions={{\n        clientId\n      }} renderCharts={(gapi, viewId) => {\n        return <TableChart gapi={gapi} query={{\n          ids: viewId,\n          \"start-date\": \"28daysAgo\",\n          \"end-date\": \"today\",\n          metrics: \"ga:pageviews\",\n          dimensions: \"ga:pagePath\"\n        }} container=\"pageviews-per-path-chart\" options={{\n          sortAscending: false,\n          sortColumn: 1\n        }} mdxType=\"TableChart\" />;\n      }} mdxType=\"AnalyticsDashboard\" />\n    </Playground>\n    <br />\n    <small>\n  Note: You can edit the source above. Your changes will be rendered\n  immediately.\n    </small>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`gapi`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GoogleAnalyticsEmbedAPI`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Required.`}</strong>{` The ready and authorized `}<a parentName=\"td\" {...{\n              \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n            }}>{`Google Analytics Embed API`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`container`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Required.`}</strong>{` Provide an ID for the `}<inlineCode parentName=\"td\">{`div`}</inlineCode>{` that will contain the chart.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`query`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/react-analytics-charts/DataChart#query-prop\"\n            }}><inlineCode parentName=\"a\">{`Query`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Required.`}</strong>{` The `}<a parentName=\"td\" {...{\n              \"href\": \"/react-analytics-charts/DataChart#query-prop\"\n            }}><inlineCode parentName=\"a\">{`Query`}</inlineCode></a>{` for the Analytics data. See the Query Prop section of `}<a parentName=\"td\" {...{\n              \"href\": \"/react-analytics-charts/DataChart\"\n            }}>{`DataChart`}</a>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/table#configuration-options\"\n            }}><inlineCode parentName=\"a\">{`TableChartOptions`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional. Options for the chart. To determine what to use here, refer to the Configuration Options section for `}<a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/table#configuration-options\"\n            }}>{`tables`}</a>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`This component also supports `}<strong parentName=\"p\">{`all `}<inlineCode parentName=\"strong\">{`div`}</inlineCode>{` props`}</strong>{`, such as `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{`.`}</p>\n    <p>{`If you have more than one of this chart on the page, be sure to specify a unique `}<inlineCode parentName=\"p\">{`container`}</inlineCode>{` ID.`}</p>\n    <h3 {...{\n      \"id\": \"query\"\n    }}>{`Query`}</h3>\n    <p>{`Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/DataChart#query-prop\"\n      }}>{`DataChart Query Prop`}</a>{` to build your own data `}<inlineCode parentName=\"p\">{`query`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"chart-options\"\n    }}>{`Chart Options`}</h3>\n    <p>{`There are numerous `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/table#configuration-options\"\n      }}>{`chart options`}</a>{` available for\ntables, allowing you to customize the appearance. Provide these via the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` prop.`}</p>\n    <p>{`Below are a few of the notable ones:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Option`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sets the width of the visualization's container element. You can use standard HTML units (for example, '100px', '80em', '60'). If no units are specified the number is assumed to be pixels. If not specified, the browser will adjust the width automatically to fit the table, shrinking as much as possible in the process; if set smaller than the width required, the table will add a horizontal scroll bar. If set to '100%', the table will expand as much as possible into the container element. Default: automatic`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sets the height of the visualization's container element. You can use standard HTML units (for example, '100px', '80em', '60'). If no units are specified the number is assumed to be pixels. If not specified, the browser will adjust the height automatically to fit the table, shrinking as much as possible in the process; if set smaller than the height required, the table will add a vertical scroll bar (the header row is also frozen). If set to '100%', the table will expand as much as possible into the container element. Default: automatic`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`alternatingRowStyle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if alternating color style will be assigned to odd and even rows. Default: `}<inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sortAscending`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The order in which the initial sort column is sorted. `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` for ascending, `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{` for descending. Ignored if `}<inlineCode parentName=\"td\">{`sortColumn`}</inlineCode>{` is not specified. Default: `}<inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sortColumn`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An index of a column in the data table, by which the table is initially sorted. The column will be marked with a small arrow indicating the sort order. Default: `}<inlineCode parentName=\"td\">{`-1`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`page`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If and how to enable paging through the data. Choose one of the following string values: `}<inlineCode parentName=\"td\">{`'enable'`}</inlineCode>{` - The table will include page-forward and page-back buttons. Clicking on these buttons will perform the paging operation and change the displayed page. You might want to also set the `}<inlineCode parentName=\"td\">{`pageSize`}</inlineCode>{` option. `}<inlineCode parentName=\"td\">{`'event'`}</inlineCode>{` - The table will include page-forward and page-back buttons, but clicking them will trigger a 'page' event and will not change the displayed page. This option should be used when the code implements its own page turning logic. See the TableQueryWrapper example for an example of how to handle paging events manually. `}<inlineCode parentName=\"td\">{`'disable'`}</inlineCode>{` - Paging is not supported. Default: `}<inlineCode parentName=\"td\">{`'disable'`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`pageSize`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The number of rows in each page, when paging is enabled with the `}<inlineCode parentName=\"td\">{`page`}</inlineCode>{` option. Default: `}<inlineCode parentName=\"td\">{`10`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The containing element is rendered as a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` and you can size and style it as you see fit using CSS.`}</p>\n    <p>{`Tables do not support titles. You'll have to add your own above the table.`}</p>\n    <p>{`See all `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/chart/interactive/docs/gallery/table#configuration-options\"\n      }}>{`table options`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}