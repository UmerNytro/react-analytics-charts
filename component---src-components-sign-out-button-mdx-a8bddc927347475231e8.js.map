{"version":3,"sources":["webpack:///../src/components/SignOutButton.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","SignOutButton","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,kNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,uCACA,kBACE,GAAM,eADR,eAGA,qFAAoE,iBAAGC,WAAW,IAC9E,KAAQ,0DADwD,8BAApE,yCAGA,oCAAmB,iBAAGA,WAAW,IAC7B,KAAQ,2CADO,mBAAnB,KAGA,kBACE,GAAM,SADR,SAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,8DAIL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,oCAIL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,+vBA+BL,kBACE,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAeH,QAAQ,UAClC,8BACE,iBAAGC,WAAW,cAAd,iDAEF,kBACE,GAAM,WADR,WAGA,4BAAW,0BAAYA,WAAW,KAAvB,UAAX,uBAAqF,0BAAYA,WAAW,KAAvB,6BAArF,KACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,mE,gNAUTJ,EAAWO,gBAAiB","file":"component---src-components-sign-out-button-mdx-a8bddc927347475231e8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-analytics-charts/react-analytics-charts/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from \"docz\";\nimport { SignOutButton } from \"./SignOutButton\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>SignOutButton</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`A button that signs the user out of Google Analytics via the `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{`. Reloads the page after signing out.`}</p>\n    <p>{`See related `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AuthorizeButton\"\n      }}>{`AuthorizeButton`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { SignOutButton } from \"react-analytics-charts\";\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SignOutButton gapi={gapi} />\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import * as React from \"react\";\nimport { useAnalyticsApi } from \"react-use-analytics-api\";\nimport { AuthorizeButton, SignOutButton } from \"react-analytics-charts\";\n\nexport function AuthExample() {\n  const { gapi, authorized } = useAnalyticsApi();\n  return (\n    <div>\n      {!authorized && (\n        <div>\n          Not authorized. Sign in here:{\" \"}\n          <AuthorizeButton\n            gapi={gapi}\n            authOptions={{\n              clientId:\n                \"123456789012-abc123def456ghi789jkl012mno345p.apps.googleusercontent.com\",\n            }}\n          />\n        </div>\n      )}\n      {authorized && (\n        <div>\n          We're authorized! <SignOutButton gapi={gapi} />\n        </div>\n      )}\n    </div>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={SignOutButton} mdxType=\"Props\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: Expand each prop for more information.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`button`}</inlineCode>{` has the class name `}<inlineCode parentName=\"p\">{`analytics-sign-out-button`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.analytics-sign-out-button {\n  /* Custom styles */\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}