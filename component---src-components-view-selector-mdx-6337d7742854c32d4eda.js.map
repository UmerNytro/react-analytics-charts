{"version":3,"sources":["webpack:///../src/components/ViewSelector.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","ViewSelector","style","border","padding","isMDXComponent"],"mappings":"4RAYaA,G,UAAe,S,iNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,sCACA,kBACE,GAAM,eADR,eAGA,6HACA,0DAAyC,iBAAGC,WAAW,IACnD,KAAQ,0DAD6B,8BAAzC,kCAGA,iDAAgC,iBAAGA,WAAW,IAC1C,KAAQ,yEACP,0BAAYA,WAAW,KAAvB,oBAFL,cAEmF,iBAAGA,WAAW,IAC7F,KAAQ,0DADuE,2BAFnF,KAKA,kBACE,GAAM,SADR,SAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,6DAIL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,qIAML,kBACE,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAcH,QAAQ,UACjC,8BACE,iBAAGC,WAAW,cAAd,iDAEF,kBACE,GAAM,WADR,WAGA,0CAAyB,0BAAYA,WAAW,KAAvB,OAAzB,uBAAgG,0BAAYA,WAAW,KAAvB,gCAAhG,uDACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,gEAML,kBACE,GAAM,WADR,WAGA,8HACA,+EAA8D,0BAAYA,WAAW,KAAvB,UAA9D,2CAA4J,iBAAGA,WAAW,IACtK,KAAQ,8CADgJ,sBAA5J,KAGA,mBAAKG,MAAO,CACVC,OAAQ,oBACRC,QAAS,SAEb,YAAC,IAAD,CAAqBN,QAAQ,yBAE3B,uBAAK,oBAAMC,WAAW,MAClB,UAAa,gBADZ,4/B,+MAwCTJ,EAAWU,gBAAiB","file":"component---src-components-view-selector-mdx-6337d7742854c32d4eda.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-analytics-charts/react-analytics-charts/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { ViewSelectorExample } from '../__docz__/components/ViewSelectorExample';\nimport clientId from '../__docz__/client-id-config';\nimport { ViewSelector } from './ViewSelector';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>ViewSelector</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`The ViewSelector component allows you to choose your account, property, and view via dropdown menus.`}</p>\n    <p>{`This component is rendered by the `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{` into a container on the page.`}</p>\n    <p>{`This component wraps the `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/useViewSelector\"\n      }}><inlineCode parentName=\"a\">{`useViewSelector`}</inlineCode></a>{` hook from `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`react-use-analytics-api`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { ViewSelector } from 'react-analytics-charts';\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const viewSelectionHandler = viewId => console.log(viewId);\n...\n<ViewSelector gapi={gapi} onChange={viewSelectionHandler} />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ViewSelector} mdxType=\"Props\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: Expand each prop for more information.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"styling\"\n    }}>{`Styling`}</h2>\n    <p>{`The view selector `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` has the class name `}<inlineCode parentName=\"p\">{`gapi-view-selector-container`}</inlineCode>{`. Inspect the DOM to see what Google renders there.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.gapi-view-selector-container {\n  /* Custom styles */\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following live example shows standalone use of a ViewSelector, including full authorization flow.`}</p>\n    <p>{`You can also use this example to quickly determine the `}<inlineCode parentName=\"p\">{`viewId`}</inlineCode>{` you'd like to provide to a chart or an `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n      }}>{`AnalyticsDashboard`}</a>{`.`}</p>\n    <div style={{\n      border: 'solid 2px #67788a',\n      padding: '20px'\n    }}>\n  <ViewSelectorExample mdxType=\"ViewSelectorExample\" />\n    </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useAnalyticsApi } from 'react-use-analytics-api';\nimport * as React from 'react';\nimport { AuthorizeButton, SignOutButton, ViewSelector } from 'react-analytics-charts';\n\nexport function ViewSelectorExample() {\n  const [viewId, setViewId] = React.useState('');\n  const { gapi, authorized } = useAnalyticsApi();\n\n  const viewIdStyles = { border: 'solid 2px orange', margin: '10px', padding: '5px' };\n\n  return (\n    <div>\n      {!authorized && (\n        <AuthorizeButton\n          gapi={gapi}\n          authOptions={{ clientId: '123456789012-abc123def456ghi789jkl012mno345p.apps.googleusercontent.com' }}\n        />\n      )}\n      {authorized && (\n        <div>\n          <h2>\n            Selected view ID:\n            <code style={viewIdStyles}>{viewId}</code>\n          </h2>\n          <p>\n            <SignOutButton gapi={gapi} />\n          </p>\n          <ViewSelector gapi={gapi} onChange={viewId => setViewId(viewId)} />\n        </div>\n      )}\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}