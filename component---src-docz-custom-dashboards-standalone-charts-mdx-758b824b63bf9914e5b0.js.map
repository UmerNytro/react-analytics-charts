{"version":3,"sources":["webpack:///../src/__docz__/custom-dashboards-standalone-charts.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","style","border","padding","authOptions","clientId","isMDXComponent"],"mappings":"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","file":"component---src-docz-custom-dashboards-standalone-charts-mdx-758b824b63bf9914e5b0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-analytics-charts/react-analytics-charts/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CustomDashboardExample } from '../__docz__/components/CustomDashboardExample';\nimport clientId from './client-id-config';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"custom-dashboards-and-standalone-charts\"\n    }}>{`Custom Dashboards and Standalone Charts`}</h1>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n      }}>{`AnalyticsDashboard`}</a>{` component makes it easy to embed charts onto your site without having to deal with loading and readying the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{`, checking authorization, and adding a view selector. The `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n      }}>{`AnalyticsDashboard`}</a>{` will handle all of that overhead for you.`}</p>\n    <p><strong parentName=\"p\">{`See `}<a parentName=\"strong\" {...{\n          \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n        }}>{`AnalyticsDashboard`}</a>{` for the easiest way to embed charts on your site.`}</strong></p>\n    <p>{`However, you may want to completely customize how your dashboard looks.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You might want more freedom over placement of the ViewSelector, auth buttons, and charts on the page. `}</li>\n      <li parentName=\"ul\">{`You might want to handle authorization yourself.`}</li>\n      <li parentName=\"ul\">{`You might want to use a `}<a parentName=\"li\" {...{\n          \"href\": \"https://reactjs.org/docs/context.html\"\n        }}>{`React Context`}</a>{` to manage `}<inlineCode parentName=\"li\">{`gapi`}</inlineCode>{` (`}<a parentName=\"li\" {...{\n          \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n        }}>{`Google Analytics Embed API`}</a>{`) state.`}</li>\n      <li parentName=\"ul\">{`You might just want to use only the chart components from this library and ignore everything else!`}</li>\n    </ul>\n    <p>{`Read on to see how you can use the included components, and optionally the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{` hook, to build a completely custom dashboard.`}</p>\n    <h2 {...{\n      \"id\": \"custom-dashboard-example\"\n    }}>{`Custom Dashboard Example`}</h2>\n    <p>{`To build your own dashboard, you'll need to handle a few things:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Load and ready the `}<a parentName=\"li\" {...{\n          \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n        }}>{`Google Analytics Embed API`}</a></li>\n      <li parentName=\"ul\">{`Sign the user in and out of Google Analytics`}</li>\n      <li parentName=\"ul\">{`Show a view selector (optionalâ€”not needed if you know the `}<a parentName=\"li\" {...{\n          \"href\": \"/react-analytics-charts/ViewSelector#example\"\n        }}>{`view ID`}</a>{`)`}</li>\n    </ul>\n    <p>{`In addition to `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AuthorizeButton\"\n      }}>{`AuthorizeButton`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/SignOutButton\"\n      }}>{`SignOutButton`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector\"\n      }}>{`ViewSelector`}</a>{`, hooks are available for API access via `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`react-use-analytics-api`}</a>{`, which this library uses internally.`}</p>\n    <p>{`Using these, you can build a custom dashboard fairly easily:`}</p>\n    <div style={{\n      border: 'solid 2px #67788a',\n      padding: '20px'\n    }}>\n  <CustomDashboardExample authOptions={{\n        clientId\n      }} mdxType=\"CustomDashboardExample\" />\n    </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useAnalyticsApi } from 'react-use-analytics-api';\nimport * as React from 'react';\nimport { AuthorizeButton, SessionsByDateChart, SessionsBySourceChart, SignOutButton, ViewSelector } from 'react-analytics-charts';\n\nexport function CustomDashboardExample(props) {\n  const [viewId, setViewId] = React.useState();\n  const { ready, gapi, authorized } = useAnalyticsApi();\n  return (\n    <div>\n      {!ready && 'Please wait...'}\n      {ready && (\n        <div>\n          {!authorized && <AuthorizeButton gapi={gapi} authOptions={props.authOptions} />}\n          {authorized && (\n            <div>\n              <ViewSelector gapi={gapi} onChange={viewId => setViewId(viewId)} />\n              <div>\n                <SessionsByDateChart gapi={gapi} viewId={viewId} />\n                <SessionsBySourceChart gapi={gapi} viewId={viewId} />\n              </div>\n              <div>\n                <SignOutButton gapi={gapi} />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"standalone-charts\"\n    }}>{`Standalone Charts`}</h2>\n    <h3 {...{\n      \"id\": \"using-analytics-dashboard\"\n    }}>{`Using Analytics Dashboard`}</h3>\n    <p>{`If you're already authorized and want to render a chart by itself, you can use an `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n      }}>{`AnalyticsDashboard`}</a>{` with a particular `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector#example\"\n      }}>{`view ID`}</a>{` and no `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector\"\n      }}>{`ViewSelector`}</a>{` visible, and no auth buttons. Give each dashboard a unique `}<inlineCode parentName=\"p\">{`dashId`}</inlineCode>{` if there is more than one.`}</p>\n    <p>{`This effectively renders charts as standalone.`}</p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard#props\"\n      }}>{`AnalyticsDashboard props`}</a>{` `}<inlineCode parentName=\"p\">{`viewId`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`hideViewSelector`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`hideAuth`}</inlineCode>{` for more info.`}</p>\n    <h3 {...{\n      \"id\": \"using-google-analytics-embed-api\"\n    }}>{`Using `}<a parentName=\"h3\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a></h3>\n    <p>{`If you load and ready the API with `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`react-use-analytics-api`}</a>{`, or already have `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{` loaded and readied via your own means, you can add any of the charts by themselves.`}</p>\n    <p>{`You will need to be authorized, and need to know the view ID (see the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector#example\"\n      }}>{`view selector example`}</a>{`). Using the view ID and `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{`, you can render any chart on the page by itself. `}</p>\n    <p>{`Just `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts\"\n      }}>{`choose a chart`}</a>{`, then pass it the ready and authorized `}<a parentName=\"p\" {...{\n        \"href\": \"https://devboldly.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{` (`}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{`), and the view ID (`}<inlineCode parentName=\"p\">{`viewId`}</inlineCode>{`), and it'll render on the page for you.`}</p>\n    <p>{`Be sure to provide each chart with a `}<inlineCode parentName=\"p\">{`container`}</inlineCode>{` ID if you are rendering the same chart type multiple times on the page.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}