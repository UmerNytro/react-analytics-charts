{"version":3,"sources":["webpack:///../src/__docz__/custom-dashboards-standalone-charts.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,sOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,2CADR,2CAGA,4BAAW,iBAAGC,WAAW,IACrB,KAAQ,8CADD,sBAAX,gHAEgJ,iBAAGA,WAAW,IAC1J,KAAQ,0DADoI,8BAFhJ,6DAIqG,iBAAGA,WAAW,IAC/G,KAAQ,8CADyF,sBAJrG,8CAOA,qBAAG,sBAAQA,WAAW,KAAnB,OAA+B,iBAAGA,WAAW,SAC1C,KAAQ,8CADoB,sBAA/B,uDAGH,gGACA,sBACE,kBAAIA,WAAW,MAAf,yGACA,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,2BAAgD,iBAAGA,WAAW,KAC1D,KAAQ,yCADoC,iBAAhD,cAEyC,0BAAYA,WAAW,MAAvB,QAFzC,KAEgG,iBAAGA,WAAW,KAC1G,KAAQ,0DADoF,8BAFhG,YAKA,kBAAIA,WAAW,MAAf,uGAEF,mGAAkF,iBAAGA,WAAW,IAC5F,KAAQ,0DADsE,8BAAlF,kDAGA,kBACE,GAAM,4BADR,4BAGA,yFACA,sBACE,kBAAIA,WAAW,MAAf,sBAA2C,iBAAGA,WAAW,KACrD,KAAQ,0DAD+B,+BAG3C,kBAAIA,WAAW,MAAf,gDACA,kBAAIA,WAAW,MAAf,6DAAkF,iBAAGA,WAAW,KAC5F,KAAQ,gDADsE,WAAlF,MAIF,uCAAsB,iBAAGA,WAAW,IAChC,KAAQ,2CADU,mBAAtB,KAEkC,iBAAGA,WAAW,IAC5C,KAAQ,yCADsB,iBAFlC,SAIoC,iBAAGA,WAAW,IAC9C,KAAQ,wCADwB,gBAJpC,4CAMsE,iBAAGA,WAAW,IAChF,KAAQ,0DAD0D,2BANtE,yCASA,qFACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,ioCA4CL,kBACE,GAAM,qBADR,qBAGA,kBACE,GAAM,6BADR,6BAGA,0GAAyF,iBAAGA,WAAW,IACnG,KAAQ,8CAD6E,sBAAzF,sBAEsD,iBAAGA,WAAW,IAChE,KAAQ,gDAD0C,WAFtD,WAIgC,iBAAGA,WAAW,IAC1C,KAAQ,wCADoB,gBAJhC,+DAMyF,0BAAYA,WAAW,KAAvB,UANzF,+BAOA,uEACA,gCAAe,iBAAGA,WAAW,IACzB,KAAQ,oDADG,4BAAf,IAE0C,0BAAYA,WAAW,KAAvB,UAF1C,KAEkG,0BAAYA,WAAW,KAAvB,oBAFlG,SAEwK,0BAAYA,WAAW,KAAvB,YAFxK,mBAGA,kBACE,GAAM,oCADR,SAEa,iBAAGA,WAAW,KACvB,KAAQ,0DADC,+BAGb,2DAA0C,iBAAGA,WAAW,IACpD,KAAQ,0DAD8B,2BAA1C,qBAE0D,0BAAYA,WAAW,KAAvB,QAF1D,wFAGA,8FAA6E,iBAAGA,WAAW,IACvF,KAAQ,gDADiE,yBAA7E,4BAE+D,0BAAYA,WAAW,KAAvB,QAF/D,qDAGA,6BAAY,iBAAGA,WAAW,IACtB,KAAQ,kCADA,kBAAZ,2CAEuE,iBAAGA,WAAW,IACjF,KAAQ,0DAD2D,8BAFvE,KAI6C,0BAAYA,WAAW,KAAvB,QAJ7C,uBAIqH,0BAAYA,WAAW,KAAvB,UAJrH,4CAKA,6DAA4C,0BAAYA,WAAW,KAAvB,aAA5C,kF,oOAKJJ,EAAWK,gBAAiB","file":"component---src-docz-custom-dashboards-standalone-charts-mdx-86db7dedc06196df80e9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-analytics-charts/react-analytics-charts/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"custom-dashboards-and-standalone-charts\"\n    }}>{`Custom Dashboards and Standalone Charts`}</h1>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n      }}>{`AnalyticsDashboard`}</a>{` component makes it easy to embed charts onto your site without having to deal with loading and readying the `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{`, checking authorization, and adding a view selector. The `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n      }}>{`AnalyticsDashboard`}</a>{` will handle all of that overhead for you.`}</p>\n    <p><strong parentName=\"p\">{`See `}<a parentName=\"strong\" {...{\n          \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n        }}>{`AnalyticsDashboard`}</a>{` for the easiest way to embed charts on your site.`}</strong></p>\n    <p>{`However, you may want to completely customize how your dashboard looks.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You might want more freedom over placement of the ViewSelector, auth buttons, and charts on the page.`}</li>\n      <li parentName=\"ul\">{`You might want to handle authorization yourself.`}</li>\n      <li parentName=\"ul\">{`You might want to use a `}<a parentName=\"li\" {...{\n          \"href\": \"https://reactjs.org/docs/context.html\"\n        }}>{`React Context`}</a>{` to manage `}<inlineCode parentName=\"li\">{`gapi`}</inlineCode>{` (`}<a parentName=\"li\" {...{\n          \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n        }}>{`Google Analytics Embed API`}</a>{`) state.`}</li>\n      <li parentName=\"ul\">{`You might just want to use only the chart components from this library and ignore everything else!`}</li>\n    </ul>\n    <p>{`Read on to see how you can use the included components, and optionally the `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{` hook, to build a completely custom dashboard.`}</p>\n    <h2 {...{\n      \"id\": \"custom-dashboard-example\"\n    }}>{`Custom Dashboard Example`}</h2>\n    <p>{`To build your own dashboard, you'll need to handle a few things:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Load and ready the `}<a parentName=\"li\" {...{\n          \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n        }}>{`Google Analytics Embed API`}</a></li>\n      <li parentName=\"ul\">{`Sign the user in and out of Google Analytics`}</li>\n      <li parentName=\"ul\">{`Show a view selector (optionalâ€”not needed if you know the `}<a parentName=\"li\" {...{\n          \"href\": \"/react-analytics-charts/ViewSelector#example\"\n        }}>{`view ID`}</a>{`)`}</li>\n    </ul>\n    <p>{`In addition to `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AuthorizeButton\"\n      }}>{`AuthorizeButton`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/SignOutButton\"\n      }}>{`SignOutButton`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector\"\n      }}>{`ViewSelector`}</a>{`, hooks are available for API access via `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`react-use-analytics-api`}</a>{`, which this library uses internally.`}</p>\n    <p>{`Using these, you can build a custom dashboard fairly easily:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useAnalyticsApi } from \"react-use-analytics-api\";\nimport * as React from \"react\";\nimport {\n  AuthorizeButton,\n  SessionsByDateChart,\n  SessionsBySourceChart,\n  SignOutButton,\n  ViewSelector,\n} from \"react-analytics-charts\";\n\nexport function CustomDashboardExample(props) {\n  const [viewId, setViewId] = React.useState();\n  const { ready, gapi, authorized } = useAnalyticsApi();\n  return (\n    <div>\n      {!ready && \"Please wait...\"}\n      {ready && (\n        <div>\n          {!authorized && (\n            <AuthorizeButton gapi={gapi} authOptions={props.authOptions} />\n          )}\n          {authorized && (\n            <div>\n              <ViewSelector\n                gapi={gapi}\n                onChange={(viewId) => setViewId(viewId)}\n              />\n              <div>\n                <SessionsByDateChart gapi={gapi} viewId={viewId} />\n                <SessionsBySourceChart gapi={gapi} viewId={viewId} />\n              </div>\n              <div>\n                <SignOutButton gapi={gapi} />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"standalone-charts\"\n    }}>{`Standalone Charts`}</h2>\n    <h3 {...{\n      \"id\": \"using-analytics-dashboard\"\n    }}>{`Using Analytics Dashboard`}</h3>\n    <p>{`If you're already authorized and want to render a chart by itself, you can use an `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard\"\n      }}>{`AnalyticsDashboard`}</a>{` with a particular `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector#example\"\n      }}>{`view ID`}</a>{` and no `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector\"\n      }}>{`ViewSelector`}</a>{` visible, and no auth buttons. Give each dashboard a unique `}<inlineCode parentName=\"p\">{`dashId`}</inlineCode>{` if there is more than one.`}</p>\n    <p>{`This effectively renders charts as standalone.`}</p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/AnalyticsDashboard#props\"\n      }}>{`AnalyticsDashboard props`}</a>{` `}<inlineCode parentName=\"p\">{`viewId`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`hideViewSelector`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`hideAuth`}</inlineCode>{` for more info.`}</p>\n    <h3 {...{\n      \"id\": \"using-google-analytics-embed-api\"\n    }}>{`Using `}<a parentName=\"h3\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a></h3>\n    <p>{`If you load and ready the API with `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`react-use-analytics-api`}</a>{`, or already have `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{` loaded and readied via your own means, you can add any of the charts by themselves.`}</p>\n    <p>{`You will need to be authorized, and need to know the view ID (see the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/ViewSelector#example\"\n      }}>{`view selector example`}</a>{`). Using the view ID and `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{`, you can render any chart on the page by itself.`}</p>\n    <p>{`Just `}<a parentName=\"p\" {...{\n        \"href\": \"/react-analytics-charts/charts\"\n      }}>{`choose a chart`}</a>{`, then pass it the ready and authorized `}<a parentName=\"p\" {...{\n        \"href\": \"https://justinmahar.github.io/react-use-analytics-api/\"\n      }}>{`Google Analytics Embed API`}</a>{` (`}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{`), and the view ID (`}<inlineCode parentName=\"p\">{`viewId`}</inlineCode>{`), and it'll render on the page for you.`}</p>\n    <p>{`Be sure to provide each chart with a `}<inlineCode parentName=\"p\">{`container`}</inlineCode>{` ID if you are rendering the same chart type multiple times on the page.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}